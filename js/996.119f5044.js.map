{"version":3,"file":"js/996.119f5044.js","mappings":"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","sources":["webpack://shreddify/./src/views/BMRCalculator.vue","webpack://shreddify/src/views/BMRCalculator.vue","webpack://shreddify/./src/views/BMRCalculator.vue?24d3","webpack://shreddify/./src/views/BMRCalculator.vue?7ceb"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"box\"},[_c('h1',{staticClass:\"has-text-centered title\"},[_c('b-tooltip',{attrs:{\"label\":\"Basal metabolic rate (BMR) is defined as the rate at which your body uses energy when you are resting in order to keep vital functions going such as breathing.\",\"position\":\"is-bottom\",\"size\":_vm.getTooltipSize,\"multilined\":\"\",\"dashed\":\"\",\"type\":\"is-primary\"}},[_c('span',[_vm._v(\"BMR\")])]),_vm._v(\" Calculator \")],1),_c('section',[_c('b-field',{attrs:{\"label\":\"Which units?\"}},[_c('b-radio',{attrs:{\"name\":\"units\",\"native-value\":\"metric\"},model:{value:(_vm.units),callback:function ($$v) {_vm.units=$$v},expression:\"units\"}},[_vm._v(\" Metric \")]),_c('b-radio',{attrs:{\"name\":\"units\",\"native-value\":\"imperial\"},model:{value:(_vm.units),callback:function ($$v) {_vm.units=$$v},expression:\"units\"}},[_vm._v(\" Imperial \")])],1),_c('b-field',{attrs:{\"label\":\"Do you know your bodyfat? (the result will be more accurate)\"}},[_c('b-radio',{attrs:{\"name\":\"bodyfatSelected\",\"native-value\":true},model:{value:(_vm.bodyfatSelected),callback:function ($$v) {_vm.bodyfatSelected=$$v},expression:\"bodyfatSelected\"}},[_vm._v(\" Yes \")]),_c('b-radio',{attrs:{\"name\":\"bodyfatSelected\",\"native-value\":false},model:{value:(_vm.bodyfatSelected),callback:function ($$v) {_vm.bodyfatSelected=$$v},expression:\"bodyfatSelected\"}},[_vm._v(\" No \")])],1),(_vm.bodyfatSelected)?_c('b-field',{attrs:{\"label\":\"Bodyfat\",\"type\":{ 'is-danger': _vm.bodyfat <= 0 }}},[_c('b-input',{staticClass:\"weight\",attrs:{\"type\":\"number\",\"min\":\"1\",\"extended\":\"\"},model:{value:(_vm.bodyfat),callback:function ($$v) {_vm.bodyfat=$$v},expression:\"bodyfat\"}}),_c('p',{staticClass:\"control\"},[_c('span',{staticClass:\"button is-static\"},[_vm._v(\"%\")])])],1):_vm._e(),(!_vm.bodyfatSelected)?_c('b-field',{attrs:{\"label\":\"Sex\"}},[_c('b-radio',{attrs:{\"name\":\"sex\",\"native-value\":\"male\"},model:{value:(_vm.sex),callback:function ($$v) {_vm.sex=$$v},expression:\"sex\"}},[_vm._v(\" Male \")]),_c('b-radio',{attrs:{\"name\":\"sex\",\"native-value\":\"female\"},model:{value:(_vm.sex),callback:function ($$v) {_vm.sex=$$v},expression:\"sex\"}},[_vm._v(\" Female \")])],1):_vm._e(),(!_vm.bodyfatSelected)?_c('b-field',{attrs:{\"label\":\"Age\",\"type\":{ 'is-danger': _vm.age <= 0 }}},[_c('b-input',{staticClass:\"age\",attrs:{\"type\":\"number\",\"min\":\"1\",\"extended\":\"\"},model:{value:(_vm.age),callback:function ($$v) {_vm.age=$$v},expression:\"age\"}}),_c('p',{staticClass:\"control\"},[_c('span',{staticClass:\"button is-static\"},[_vm._v(\"years\")])])],1):_vm._e(),(_vm.units === 'metric' && !_vm.bodyfatSelected)?_c('b-field',{attrs:{\"label\":\"Height\",\"type\":{ 'is-danger': _vm.height.metric <= 0 }}},[_c('b-input',{staticClass:\"height\",attrs:{\"type\":\"number\",\"step\":\"any\",\"min\":\"1\",\"extended\":\"\"},model:{value:(_vm.height.metric),callback:function ($$v) {_vm.$set(_vm.height, \"metric\", $$v)},expression:\"height.metric\"}}),_c('p',{staticClass:\"control\"},[_c('span',{staticClass:\"button is-static\"},[_vm._v(\"cm\")])])],1):_vm._e(),(_vm.units === 'imperial' && !_vm.bodyfatSelected)?_c('b-field',{attrs:{\"label\":\"Height\",\"type\":{\n          'is-danger':\n            _vm.height.imperial.inches < 0 || _vm.height.imperial.feet <= 0,\n        }}},[_c('b-input',{staticClass:\"height\",attrs:{\"type\":\"number\",\"min\":\"1\",\"extended\":\"\"},model:{value:(_vm.height.imperial.feet),callback:function ($$v) {_vm.$set(_vm.height.imperial, \"feet\", $$v)},expression:\"height.imperial.feet\"}}),_c('p',{staticClass:\"control\"},[_c('span',{staticClass:\"button is-static\"},[_vm._v(\"feet\")])]),_c('b-input',{staticClass:\"height\",attrs:{\"type\":\"number\",\"step\":\"any\",\"min\":\"0\",\"extended\":\"\"},model:{value:(_vm.height.imperial.inches),callback:function ($$v) {_vm.$set(_vm.height.imperial, \"inches\", $$v)},expression:\"height.imperial.inches\"}}),_c('p',{staticClass:\"control\"},[_c('span',{staticClass:\"button is-static\"},[_vm._v(\"inches\")])])],1):_vm._e(),(_vm.units === 'metric')?_c('b-field',{attrs:{\"label\":\"Weight\",\"type\":{ 'is-danger': _vm.weight <= 0 }}},[_c('b-input',{staticClass:\"weight\",attrs:{\"type\":\"number\",\"step\":\"any\",\"min\":\"1\",\"extended\":\"\"},model:{value:(_vm.weight.metric),callback:function ($$v) {_vm.$set(_vm.weight, \"metric\", $$v)},expression:\"weight.metric\"}}),_c('p',{staticClass:\"control\"},[_c('span',{staticClass:\"button is-static\"},[_vm._v(\"kg\")])])],1):_c('b-field',{attrs:{\"label\":\"Weight\",\"type\":{ 'is-danger': _vm.weight <= 0 }}},[_c('b-input',{staticClass:\"weight\",attrs:{\"type\":\"number\",\"step\":\"any\",\"min\":\"1\",\"extended\":\"\"},model:{value:(_vm.weight.imperial),callback:function ($$v) {_vm.$set(_vm.weight, \"imperial\", $$v)},expression:\"weight.imperial\"}}),_c('p',{staticClass:\"control\"},[_c('span',{staticClass:\"button is-static\"},[_vm._v(\"lb\")])])],1)],1),_c('div',{staticClass:\"mt-4 is-size-5 has-text-centered\"},[_vm._v(\" Your \"),_c('b-tooltip',{attrs:{\"label\":\"Basal metabolic rate (BMR) is defined as the rate at which your body uses energy when you are resting in order to keep vital functions going such as breathing.\",\"position\":\"is-top\",\"size\":_vm.getTooltipSize,\"multilined\":\"\",\"dashed\":\"\",\"type\":\"is-primary\"}},[_c('span',[_vm._v(\"BMR\")])]),_vm._v(\" is \"),_c('span',{staticClass:\"has-text-weight-bold\"},[_vm._v(_vm._s(_vm.bodyfatSelected ? _vm.getBFBMR : _vm.getBMR)+\" kcal\")])],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div class=\"box\">\n      <h1 class=\"has-text-centered title\">\n        <b-tooltip\n          label=\"Basal metabolic rate (BMR) is defined as the rate at which your body uses energy when you are resting in order to keep vital functions going such as breathing.\"\n          position=\"is-bottom\"\n          :size=\"getTooltipSize\"\n          multilined\n          dashed\n          type=\"is-primary\"\n        >\n          <span>BMR</span>\n        </b-tooltip>\n        Calculator\n      </h1>\n      <section>\n        <!-- Units selected? -->\n        <b-field label=\"Which units?\">\n          <b-radio v-model=\"units\" name=\"units\" native-value=\"metric\">\n            Metric\n          </b-radio>\n          <b-radio v-model=\"units\" name=\"units\" native-value=\"imperial\">\n            Imperial\n          </b-radio>\n        </b-field>\n\n        <!-- Bodyfat selected? -->\n        <b-field\n          label=\"Do you know your bodyfat? (the result will be more accurate)\"\n        >\n          <b-radio\n            v-model=\"bodyfatSelected\"\n            name=\"bodyfatSelected\"\n            :native-value=\"true\"\n          >\n            Yes\n          </b-radio>\n          <b-radio\n            v-model=\"bodyfatSelected\"\n            name=\"bodyfatSelected\"\n            :native-value=\"false\"\n          >\n            No\n          </b-radio>\n        </b-field>\n\n        <!-- Bodyfat -->\n        <b-field\n          label=\"Bodyfat\"\n          :type=\"{ 'is-danger': bodyfat <= 0 }\"\n          v-if=\"bodyfatSelected\"\n        >\n          <b-input\n            class=\"weight\"\n            type=\"number\"\n            v-model=\"bodyfat\"\n            min=\"1\"\n            extended\n          ></b-input>\n          <p class=\"control\">\n            <span class=\"button is-static\">%</span>\n          </p>\n        </b-field>\n\n        <!-- Sex? -->\n        <b-field label=\"Sex\" v-if=\"!bodyfatSelected\">\n          <b-radio v-model=\"sex\" name=\"sex\" native-value=\"male\">\n            Male\n          </b-radio>\n          <b-radio v-model=\"sex\" name=\"sex\" native-value=\"female\">\n            Female\n          </b-radio>\n        </b-field>\n\n        <!-- Age -->\n        <b-field\n          label=\"Age\"\n          :type=\"{ 'is-danger': age <= 0 }\"\n          v-if=\"!bodyfatSelected\"\n        >\n          <b-input\n            class=\"age\"\n            type=\"number\"\n            v-model=\"age\"\n            min=\"1\"\n            extended\n          ></b-input>\n          <p class=\"control\">\n            <span class=\"button is-static\">years</span>\n          </p>\n        </b-field>\n\n        <!-- Metric height -->\n        <b-field\n          label=\"Height\"\n          :type=\"{ 'is-danger': height.metric <= 0 }\"\n          v-if=\"units === 'metric' && !bodyfatSelected\"\n        >\n          <b-input\n            type=\"number\"\n            step=\"any\"\n            v-model=\"height.metric\"\n            class=\"height\"\n            min=\"1\"\n            extended\n          ></b-input>\n          <p class=\"control\">\n            <span class=\"button is-static\">cm</span>\n          </p>\n        </b-field>\n\n        <!-- Imperial height -->\n        <b-field\n          label=\"Height\"\n          :type=\"{\n            'is-danger':\n              height.imperial.inches < 0 || height.imperial.feet <= 0,\n          }\"\n          v-if=\"units === 'imperial' && !bodyfatSelected\"\n        >\n          <b-input\n            type=\"number\"\n            v-model=\"height.imperial.feet\"\n            min=\"1\"\n            class=\"height\"\n            extended\n          ></b-input>\n          <p class=\"control\">\n            <span class=\"button is-static\">feet</span>\n          </p>\n          <b-input\n            type=\"number\"\n            step=\"any\"\n            v-model=\"height.imperial.inches\"\n            min=\"0\"\n            class=\"height\"\n            extended\n          ></b-input>\n          <p class=\"control\">\n            <span class=\"button is-static\">inches</span>\n          </p>\n        </b-field>\n\n        <!-- Weight Metric -->\n        <b-field\n          label=\"Weight\"\n          :type=\"{ 'is-danger': weight <= 0 }\"\n          v-if=\"units === 'metric'\"\n        >\n          <b-input\n            class=\"weight\"\n            type=\"number\"\n            step=\"any\"\n            v-model=\"weight.metric\"\n            min=\"1\"\n            extended\n          ></b-input>\n          <p class=\"control\">\n            <span class=\"button is-static\">kg</span>\n          </p>\n        </b-field>\n\n        <!-- Weight Imperial -->\n        <b-field label=\"Weight\" :type=\"{ 'is-danger': weight <= 0 }\" v-else>\n          <b-input\n            class=\"weight\"\n            type=\"number\"\n            step=\"any\"\n            v-model=\"weight.imperial\"\n            min=\"1\"\n            extended\n          ></b-input>\n          <p class=\"control\">\n            <span class=\"button is-static\">lb</span>\n          </p>\n        </b-field>\n      </section>\n\n      <!-- Result -->\n      <div class=\"mt-4 is-size-5 has-text-centered\">\n        Your\n        <b-tooltip\n          label=\"Basal metabolic rate (BMR) is defined as the rate at which your body uses energy when you are resting in order to keep vital functions going such as breathing.\"\n          position=\"is-top\"\n          :size=\"getTooltipSize\"\n          multilined\n          dashed\n          type=\"is-primary\"\n        >\n          <span>BMR</span>\n        </b-tooltip>\n        is\n        <span class=\"has-text-weight-bold\"\n          >{{ bodyfatSelected ? getBFBMR : getBMR }} kcal</span\n        >\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    bodyfatSelected: false,\n    bodyfat: 12,\n    units: 'metric',\n    sex: 'male',\n    age: 22,\n    height: {\n      metric: 183,\n      imperial: {\n        feet: 6,\n        inches: 0,\n      },\n    },\n    weight: {\n      metric: 80,\n      imperial: 180,\n    },\n  }),\n  computed: {\n    getTooltipSize() {\n      return screen.width >= 540 ? 'is-large' : 'is-small';\n    },\n    getBFBMR() {\n      return this.units === 'metric'\n        ? Math.round(\n            370 + 21.6 * ((this.weight.metric * (100 - this.bodyfat)) / 100)\n          )\n        : Math.round(\n            370 +\n              21.6 *\n                (((this.weight.imperial / 2.205) * (100 - this.bodyfat)) / 100)\n          );\n    },\n    getBMR() {\n      return this.units === 'metric'\n        ? this.sex === 'male'\n          ? Math.round(\n              this.weight.metric * 10 +\n                6.25 * this.height.metric -\n                5 * this.age +\n                5\n            )\n          : Math.round(\n              this.weight.metric * 10 +\n                6.25 * this.height.metric -\n                5 * this.age -\n                161\n            )\n        : this.sex === 'male'\n        ? Math.round(\n            4.536 * Number.parseInt(this.weight.imperial) +\n              15.88 *\n                (Number.parseInt(this.height.imperial.feet) * 12 +\n                  Number.parseInt(this.height.imperial.inches)) -\n              5 * Number.parseInt(this.age) +\n              5\n          )\n        : Math.round(\n            4.536 * Number.parseInt(this.weight.imperial) +\n              15.88 *\n                (Number.parseInt(this.height.imperial.feet) * 12 +\n                  Number.parseInt(this.height.imperial.inches)) -\n              5 * Number.parseInt(this.age) -\n              161\n          );\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.box {\n  max-width: 500px;\n  margin: 0 auto;\n  margin-bottom: 25px;\n}\n\n.age {\n  width: 83px;\n}\n\n.weight {\n  width: 103px;\n}\n\n.height {\n  width: 100px;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BMRCalculator.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BMRCalculator.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BMRCalculator.vue?vue&type=template&id=01c09fed&scoped=true&\"\nimport script from \"./BMRCalculator.vue?vue&type=script&lang=js&\"\nexport * from \"./BMRCalculator.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BMRCalculator.vue?vue&type=style&index=0&id=01c09fed&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"01c09fed\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","getTooltipSize","_v","model","value","units","callback","$$v","expression","bodyfatSelected","bodyfat","_e","sex","age","height","metric","$set","imperial","inches","feet","weight","_s","getBFBMR","getBMR","staticRenderFns","data","computed","screen","width","Math","round","Number","parseInt","component"],"sourceRoot":""}